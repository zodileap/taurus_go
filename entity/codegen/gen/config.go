package gen

import (
	"github.com/zodileap/taurus_go/template"
)

// ExtTemplate 用于外部传入的template
type ExtTemplate struct {
	Tmpl        *template.Template // 模板
	TargetPaths []string           // 目标路径,如果为空，则使用entity生成的路径为目标路径
}

// Config 代码生成的全局配置，并在所有生成的节点之间共享
type Config struct {
	// PackageName 保存生成的代码的包名。
	PackageName string

	// Target 保存生成的代码的目标路径。
	//
	// 默认情况下，代码生成器将生成代码到和Package上一级目录。
	// 例如，"tentity generate ./entity/schema"，则生成的代码将放在"./entity"目录下。
	Target string

	// BuildFlags 保存生成代码时传递给go build的标志。
	BuildFlags []string

	// Package 定义了上面的Target目录下，Go package的路径，比如“package gen”，则
	// Package为"gen"
	//
	// "generate project/entity" 或者在项目根目录下 "generate ./entity"，
	// 然后会获得执行路径下文件的Go package作为Package
	Package string

	// Header 它允许用户为生成的文件提供一个可选的头部签名。
	// 默认情况下，这个头部签名遵循标准的 'go generate' 格式，
	// 即 '// Code generated by ent, DO NOT EDIT.'
	Header string

	// Hooks 可选的hook列表，用于代码生成前、后在表上执行
	Hooks []Hook

	// Templates 外部传入的template
	Templates []ExtTemplate

	// ExtraCodes 保存额外的代码，它将被添加到生成的代码中
	ExtraCodes []string

	ExtTemplatesTargetPaths []string
}
