{{ define "schema/package" }}
package {{ . }}

import (
	"github.com/zodileap/taurus_go/entity"
	"github.com/zodileap/taurus_go/entity/dialect"
)
{{ end }}

{{ define "database" }}

import (
	// 让go mod tidy时能够正确识别go gen需要的包
	_ "github.com/zodileap/taurus_go/entity/codegen"
)

type {{ stringToFirstCap . }} struct {
    entity.Database
}

func (d *{{ stringToFirstCap .}}) Config() entity.DbConfig {
    return entity.DbConfig{
		Name: "{{ stringToFirstLower .}}",
        Tag: "{{ stringToFirstLower .}}",
		Type: dialect.PostgreSQL,
    }
}

func (d *{{ stringToFirstCap .}}) Relationships() []entity.RelationshipBuilder {
	return []entity.RelationshipBuilder{}
}
{{ end }}


{{ define "schema" }}
package schema

import (
	"github.com/zodileap/taurus_go/entity"
	"github.com/zodileap/taurus_go/entity/dialect"
)
{{ end }}

{{ define "generate"}}
package {{ . }}

//go:generate go run github.com/zodileap/taurus_go/entity/cmd generate ./schema
{{ end }}

{{ define "entity" }}

type {{ stringToFirstCap . }}Entity struct {
    entity.Entity
}

func (e *{{ stringToFirstCap . }}Entity) Config() entity.EntityConfig {
	return entity.EntityConfig{
		AttrName: "{{ stringToSnakeCase . }}",
	}
}

func (e *{{ stringToFirstCap . }}Entity) Fields() []entity.FieldBuilder {
	return []entity.FieldBuilder{
	}
}

{{ end }}
